//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WAFieldStatsEvent.h"

@class NSString;

@interface WAFieldStatsEventCall : WAFieldStatsEvent
{
    double _audio_get_frame_underflow_ps;
    double _audio_put_frame_overflow_ps;
    double _builtin_aec_available;
    double _builtin_agc_available;
    double _builtin_ns_available;
    double _call_aec_mode;
    double _call_aec_offset;
    double _call_aec_tail_length;
    double _call_agc_mode;
    double _call_android_audio_mode;
    double _call_android_record_audio_preset;
    double _call_android_record_audio_source;
    double _call_audio_engine_type;
    double _call_calculated_ec_offset;
    double _call_calculated_ec_offset_stddev;
    double _call_echo_likelihood;
    double _call_from_ui;
    double _call_network;
    double _call_ns_mode;
    NSString *_call_peer_app_version;
    NSString *_call_peer_platform;
    double _call_playback_buffer_size;
    double _call_record_buffer_size;
    double _call_record_frames_ps;
    double _call_record_silence_ratio;
    double _call_relay_bind_status;
    NSString *_call_relay_server;
    double _call_result;
    double _call_sampling_rate;
    double _call_server_nack_error_code;
    double _call_setup_error_type;
    double _call_side;
    double _call_sw_aec_mode;
    double _call_sw_aec_type;
    double _call_term_reason;
    NSString *_call_test_bucket;
    double _call_tones_detected_in_record;
    double _call_tones_detected_in_ringback;
    double _call_transition_count;
    double _call_transport;
    double _call_transport_p2p_to_relay_fallback_count;
    double _call_transport_relay_to_relay_fallback_count;
    double _call_user_rate;
    double _call_wakeup_source;
    double _encoder_comp_stepdowns;
    double _long_connect;
    double _peer_call_result;
    double _peer_loc;
    double _peer_user_id;
    double _peer_xmpp_status;
    NSString *_user_description;
    double _user_rating;
    double _xmpp_status;
    double _avg_decode_t;
    double _avg_encode_t;
    double _avg_play_cb_t;
    double _avg_record_cb_t;
    double _avg_record_get_frame_t;
    double _avg_target_bitrate;
    double _call_accept_func_t;
    double _call_avg_rtt;
    double _call_end_func_t;
    double _call_hist_echo_likelihood;
    double _call_last_rtt;
    double _call_max_rtt;
    double _call_min_rtt;
    double _call_offer_elapsed_t;
    double _call_offer_receipt_delay;
    double _call_reject_func_t;
    double _call_relay_create_t;
    double _call_ringing_t;
    double _call_rx_avg_bitrate;
    double _call_rx_avg_jitter;
    double _call_rx_avg_loss_period;
    double _call_rx_max_jitter;
    double _call_rx_max_loss_period;
    double _call_rx_min_jitter;
    double _call_rx_min_loss_period;
    double _call_rx_pkt_loss_pct;
    double _call_rx_stopped_t;
    double _call_setup_t;
    double _call_sound_port_func_t;
    double _call_start_func_t;
    double _call_t;
    double _call_tx_avg_bitrate;
    double _call_tx_avg_jitter;
    double _call_tx_avg_loss_period;
    double _call_tx_max_jitter;
    double _call_tx_max_loss_period;
    double _call_tx_min_jitter;
    double _call_tx_min_loss_period;
    double _call_tx_pkt_loss_pct;
    double _jb_avg_delay;
    double _jb_discards;
    double _jb_empties;
    double _jb_gets;
    double _jb_last_delay;
    double _jb_max_delay;
    double _jb_min_delay;
    double _jb_puts;
    double _rc_maxrtt;
    double _rc_minrtt;
    double _rx_total_bitrate;
    double _rx_total_bytes;
    double _tx_total_bitrate;
    double _tx_total_bytes;
}

@property(nonatomic) double tx_total_bytes; // @synthesize tx_total_bytes=_tx_total_bytes;
@property(nonatomic) double tx_total_bitrate; // @synthesize tx_total_bitrate=_tx_total_bitrate;
@property(nonatomic) double rx_total_bytes; // @synthesize rx_total_bytes=_rx_total_bytes;
@property(nonatomic) double rx_total_bitrate; // @synthesize rx_total_bitrate=_rx_total_bitrate;
@property(nonatomic) double rc_minrtt; // @synthesize rc_minrtt=_rc_minrtt;
@property(nonatomic) double rc_maxrtt; // @synthesize rc_maxrtt=_rc_maxrtt;
@property(nonatomic) double jb_puts; // @synthesize jb_puts=_jb_puts;
@property(nonatomic) double jb_min_delay; // @synthesize jb_min_delay=_jb_min_delay;
@property(nonatomic) double jb_max_delay; // @synthesize jb_max_delay=_jb_max_delay;
@property(nonatomic) double jb_last_delay; // @synthesize jb_last_delay=_jb_last_delay;
@property(nonatomic) double jb_gets; // @synthesize jb_gets=_jb_gets;
@property(nonatomic) double jb_empties; // @synthesize jb_empties=_jb_empties;
@property(nonatomic) double jb_discards; // @synthesize jb_discards=_jb_discards;
@property(nonatomic) double jb_avg_delay; // @synthesize jb_avg_delay=_jb_avg_delay;
@property(nonatomic) double call_tx_pkt_loss_pct; // @synthesize call_tx_pkt_loss_pct=_call_tx_pkt_loss_pct;
@property(nonatomic) double call_tx_min_loss_period; // @synthesize call_tx_min_loss_period=_call_tx_min_loss_period;
@property(nonatomic) double call_tx_min_jitter; // @synthesize call_tx_min_jitter=_call_tx_min_jitter;
@property(nonatomic) double call_tx_max_loss_period; // @synthesize call_tx_max_loss_period=_call_tx_max_loss_period;
@property(nonatomic) double call_tx_max_jitter; // @synthesize call_tx_max_jitter=_call_tx_max_jitter;
@property(nonatomic) double call_tx_avg_loss_period; // @synthesize call_tx_avg_loss_period=_call_tx_avg_loss_period;
@property(nonatomic) double call_tx_avg_jitter; // @synthesize call_tx_avg_jitter=_call_tx_avg_jitter;
@property(nonatomic) double call_tx_avg_bitrate; // @synthesize call_tx_avg_bitrate=_call_tx_avg_bitrate;
@property(nonatomic) double call_t; // @synthesize call_t=_call_t;
@property(nonatomic) double call_start_func_t; // @synthesize call_start_func_t=_call_start_func_t;
@property(nonatomic) double call_sound_port_func_t; // @synthesize call_sound_port_func_t=_call_sound_port_func_t;
@property(nonatomic) double call_setup_t; // @synthesize call_setup_t=_call_setup_t;
@property(nonatomic) double call_rx_stopped_t; // @synthesize call_rx_stopped_t=_call_rx_stopped_t;
@property(nonatomic) double call_rx_pkt_loss_pct; // @synthesize call_rx_pkt_loss_pct=_call_rx_pkt_loss_pct;
@property(nonatomic) double call_rx_min_loss_period; // @synthesize call_rx_min_loss_period=_call_rx_min_loss_period;
@property(nonatomic) double call_rx_min_jitter; // @synthesize call_rx_min_jitter=_call_rx_min_jitter;
@property(nonatomic) double call_rx_max_loss_period; // @synthesize call_rx_max_loss_period=_call_rx_max_loss_period;
@property(nonatomic) double call_rx_max_jitter; // @synthesize call_rx_max_jitter=_call_rx_max_jitter;
@property(nonatomic) double call_rx_avg_loss_period; // @synthesize call_rx_avg_loss_period=_call_rx_avg_loss_period;
@property(nonatomic) double call_rx_avg_jitter; // @synthesize call_rx_avg_jitter=_call_rx_avg_jitter;
@property(nonatomic) double call_rx_avg_bitrate; // @synthesize call_rx_avg_bitrate=_call_rx_avg_bitrate;
@property(nonatomic) double call_ringing_t; // @synthesize call_ringing_t=_call_ringing_t;
@property(nonatomic) double call_relay_create_t; // @synthesize call_relay_create_t=_call_relay_create_t;
@property(nonatomic) double call_reject_func_t; // @synthesize call_reject_func_t=_call_reject_func_t;
@property(nonatomic) double call_offer_receipt_delay; // @synthesize call_offer_receipt_delay=_call_offer_receipt_delay;
@property(nonatomic) double call_offer_elapsed_t; // @synthesize call_offer_elapsed_t=_call_offer_elapsed_t;
@property(nonatomic) double call_min_rtt; // @synthesize call_min_rtt=_call_min_rtt;
@property(nonatomic) double call_max_rtt; // @synthesize call_max_rtt=_call_max_rtt;
@property(nonatomic) double call_last_rtt; // @synthesize call_last_rtt=_call_last_rtt;
@property(nonatomic) double call_hist_echo_likelihood; // @synthesize call_hist_echo_likelihood=_call_hist_echo_likelihood;
@property(nonatomic) double call_end_func_t; // @synthesize call_end_func_t=_call_end_func_t;
@property(nonatomic) double call_avg_rtt; // @synthesize call_avg_rtt=_call_avg_rtt;
@property(nonatomic) double call_accept_func_t; // @synthesize call_accept_func_t=_call_accept_func_t;
@property(nonatomic) double avg_target_bitrate; // @synthesize avg_target_bitrate=_avg_target_bitrate;
@property(nonatomic) double avg_record_get_frame_t; // @synthesize avg_record_get_frame_t=_avg_record_get_frame_t;
@property(nonatomic) double avg_record_cb_t; // @synthesize avg_record_cb_t=_avg_record_cb_t;
@property(nonatomic) double avg_play_cb_t; // @synthesize avg_play_cb_t=_avg_play_cb_t;
@property(nonatomic) double avg_encode_t; // @synthesize avg_encode_t=_avg_encode_t;
@property(nonatomic) double avg_decode_t; // @synthesize avg_decode_t=_avg_decode_t;
@property(nonatomic) double xmpp_status; // @synthesize xmpp_status=_xmpp_status;
@property(nonatomic) double user_rating; // @synthesize user_rating=_user_rating;
@property(retain, nonatomic) NSString *user_description; // @synthesize user_description=_user_description;
@property(nonatomic) double peer_xmpp_status; // @synthesize peer_xmpp_status=_peer_xmpp_status;
@property(nonatomic) double peer_user_id; // @synthesize peer_user_id=_peer_user_id;
@property(nonatomic) double peer_loc; // @synthesize peer_loc=_peer_loc;
@property(nonatomic) double peer_call_result; // @synthesize peer_call_result=_peer_call_result;
@property(nonatomic) double long_connect; // @synthesize long_connect=_long_connect;
@property(nonatomic) double encoder_comp_stepdowns; // @synthesize encoder_comp_stepdowns=_encoder_comp_stepdowns;
@property(nonatomic) double call_wakeup_source; // @synthesize call_wakeup_source=_call_wakeup_source;
@property(nonatomic) double call_user_rate; // @synthesize call_user_rate=_call_user_rate;
@property(nonatomic) double call_transport_relay_to_relay_fallback_count; // @synthesize call_transport_relay_to_relay_fallback_count=_call_transport_relay_to_relay_fallback_count;
@property(nonatomic) double call_transport_p2p_to_relay_fallback_count; // @synthesize call_transport_p2p_to_relay_fallback_count=_call_transport_p2p_to_relay_fallback_count;
@property(nonatomic) double call_transport; // @synthesize call_transport=_call_transport;
@property(nonatomic) double call_transition_count; // @synthesize call_transition_count=_call_transition_count;
@property(nonatomic) double call_tones_detected_in_ringback; // @synthesize call_tones_detected_in_ringback=_call_tones_detected_in_ringback;
@property(nonatomic) double call_tones_detected_in_record; // @synthesize call_tones_detected_in_record=_call_tones_detected_in_record;
@property(retain, nonatomic) NSString *call_test_bucket; // @synthesize call_test_bucket=_call_test_bucket;
@property(nonatomic) double call_term_reason; // @synthesize call_term_reason=_call_term_reason;
@property(nonatomic) double call_sw_aec_type; // @synthesize call_sw_aec_type=_call_sw_aec_type;
@property(nonatomic) double call_sw_aec_mode; // @synthesize call_sw_aec_mode=_call_sw_aec_mode;
@property(nonatomic) double call_side; // @synthesize call_side=_call_side;
@property(nonatomic) double call_setup_error_type; // @synthesize call_setup_error_type=_call_setup_error_type;
@property(nonatomic) double call_server_nack_error_code; // @synthesize call_server_nack_error_code=_call_server_nack_error_code;
@property(nonatomic) double call_sampling_rate; // @synthesize call_sampling_rate=_call_sampling_rate;
@property(nonatomic) double call_result; // @synthesize call_result=_call_result;
@property(retain, nonatomic) NSString *call_relay_server; // @synthesize call_relay_server=_call_relay_server;
@property(nonatomic) double call_relay_bind_status; // @synthesize call_relay_bind_status=_call_relay_bind_status;
@property(nonatomic) double call_record_silence_ratio; // @synthesize call_record_silence_ratio=_call_record_silence_ratio;
@property(nonatomic) double call_record_frames_ps; // @synthesize call_record_frames_ps=_call_record_frames_ps;
@property(nonatomic) double call_record_buffer_size; // @synthesize call_record_buffer_size=_call_record_buffer_size;
@property(nonatomic) double call_playback_buffer_size; // @synthesize call_playback_buffer_size=_call_playback_buffer_size;
@property(retain, nonatomic) NSString *call_peer_platform; // @synthesize call_peer_platform=_call_peer_platform;
@property(retain, nonatomic) NSString *call_peer_app_version; // @synthesize call_peer_app_version=_call_peer_app_version;
@property(nonatomic) double call_ns_mode; // @synthesize call_ns_mode=_call_ns_mode;
@property(nonatomic) double call_network; // @synthesize call_network=_call_network;
@property(nonatomic) double call_from_ui; // @synthesize call_from_ui=_call_from_ui;
@property(nonatomic) double call_echo_likelihood; // @synthesize call_echo_likelihood=_call_echo_likelihood;
@property(nonatomic) double call_calculated_ec_offset_stddev; // @synthesize call_calculated_ec_offset_stddev=_call_calculated_ec_offset_stddev;
@property(nonatomic) double call_calculated_ec_offset; // @synthesize call_calculated_ec_offset=_call_calculated_ec_offset;
@property(nonatomic) double call_audio_engine_type; // @synthesize call_audio_engine_type=_call_audio_engine_type;
@property(nonatomic) double call_android_record_audio_source; // @synthesize call_android_record_audio_source=_call_android_record_audio_source;
@property(nonatomic) double call_android_record_audio_preset; // @synthesize call_android_record_audio_preset=_call_android_record_audio_preset;
@property(nonatomic) double call_android_audio_mode; // @synthesize call_android_audio_mode=_call_android_audio_mode;
@property(nonatomic) double call_agc_mode; // @synthesize call_agc_mode=_call_agc_mode;
@property(nonatomic) double call_aec_tail_length; // @synthesize call_aec_tail_length=_call_aec_tail_length;
@property(nonatomic) double call_aec_offset; // @synthesize call_aec_offset=_call_aec_offset;
@property(nonatomic) double call_aec_mode; // @synthesize call_aec_mode=_call_aec_mode;
@property(nonatomic) double builtin_ns_available; // @synthesize builtin_ns_available=_builtin_ns_available;
@property(nonatomic) double builtin_agc_available; // @synthesize builtin_agc_available=_builtin_agc_available;
@property(nonatomic) double builtin_aec_available; // @synthesize builtin_aec_available=_builtin_aec_available;
@property(nonatomic) double audio_put_frame_overflow_ps; // @synthesize audio_put_frame_overflow_ps=_audio_put_frame_overflow_ps;
@property(nonatomic) double audio_get_frame_underflow_ps; // @synthesize audio_get_frame_underflow_ps=_audio_get_frame_underflow_ps;
- (void).cxx_destruct;
- (void)submit;
- (id)init;

@end

