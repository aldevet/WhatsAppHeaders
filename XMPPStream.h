//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "XMPPSocketDelegate.h"

@class ExecutionTimeProfiler, NSData, NSDictionary, NSMutableArray, NSMutableData, NSObject<OS_dispatch_queue>, NSString, XMPPBinaryCoder, XMPPSocket;

@interface XMPPStream : NSObject <XMPPSocketDelegate>
{
    XMPPBinaryCoder *_binaryCoder;
    NSMutableData *_incomingBuffer;
    XMPPSocket *_socket;
    ExecutionTimeProfiler *_profiler;
    NSMutableData *_nextToken;
    double _lastSocketReadWriteTime;
    NSMutableArray *_messages;
    _Bool _firstPresenceReceived;
    NSDictionary *_connectionInfo;
    _Bool _isDisconnecting;
    _Bool _contactsAccessAllowed;
    _Bool _xmppPassiveMode;
    _Bool _opened;
    id <XMPPStreamDelegate> _delegate;
    NSString *_xmppUser;
    NSData *_xmppPassword;
    double _lastReadDataTime;
    double _lastOfflineStanzaTime;
}

@property(readonly, nonatomic, getter=isOpened) _Bool opened; // @synthesize opened=_opened;
@property(readonly, nonatomic) double lastOfflineStanzaTime; // @synthesize lastOfflineStanzaTime=_lastOfflineStanzaTime;
@property(readonly, nonatomic) double lastReadDataTime; // @synthesize lastReadDataTime=_lastReadDataTime;
@property(nonatomic) _Bool xmppPassiveMode; // @synthesize xmppPassiveMode=_xmppPassiveMode;
@property(retain, nonatomic) NSData *xmppPassword; // @synthesize xmppPassword=_xmppPassword;
@property(retain, nonatomic) NSString *xmppUser; // @synthesize xmppUser=_xmppUser;
@property(nonatomic, getter=isContactsAccessAllowed) _Bool contactsAccessAllowed; // @synthesize contactsAccessAllowed=_contactsAccessAllowed;
@property(nonatomic) __weak id <XMPPStreamDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)xmppSocketDidDisconnect:(id)arg1;
- (void)reportIdleSocketAfterDelay;
- (void)xmppSocketDidWriteData:(id)arg1;
- (void)xmppSocket:(id)arg1 didReadData:(id)arg2;
- (void)startStreamWithLoginStanzaElements:(id)arg1 connectionInfo:(id)arg2;
- (void)xmppSocket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)xmppSocket:(id)arg1 willConnectToHost:(id)arg2;
@property(readonly, nonatomic, getter=isSocketAlive) _Bool socketAlive;
@property(copy, nonatomic) NSString *hintIPAdress;
@property(readonly, nonatomic) unsigned short currentPort;
@property(readonly, copy, nonatomic) NSString *currentIPAddress;
@property(readonly, copy, nonatomic) NSString *currentHost;
@property(nonatomic) _Bool bindsToCellularNetwork;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
- (void)processElements:(id)arg1;
- (void)processStanza:(id)arg1;
- (void)processMessages;
- (void)outputProfilingResults;
- (unsigned long long)sendElements:(id)arg1;
- (unsigned long long)sendElements:(id)arg1 timeout:(double)arg2;
- (unsigned long long)sendElement:(id)arg1;
- (unsigned long long)sendElement:(id)arg1 timeout:(double)arg2;
- (unsigned long long)internalSendElements:(id)arg1 timeout:(double)arg2 encrypted:(_Bool)arg3;
- (void)sendStreamEndAndDisconnect;
- (void)disconnectImmediately;
- (void)connect;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

