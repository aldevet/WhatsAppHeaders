//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GCDAsyncSocketDelegate.h"

@class GCDAsyncSocket, InetAddress, NSArray, NSObject<OS_dispatch_queue>, NSString, WATimer;

@interface XMPPSocket : NSObject <GCDAsyncSocketDelegate>
{
    GCDAsyncSocket *_socket;
    double _timeout;
    WATimer *_disconnectionTimer;
    NSArray *_hosts;
    unsigned long long _hostIndex;
    NSArray *_addresses;
    unsigned long long _addressIndex;
    unsigned long long _addressOffset;
    _Bool _allowRetries;
    _Bool _usingDebugHost;
    _Bool _bindsToCellularNetwork;
    unsigned short _port;
    InetAddress *_currentIP;
    NSString *_currentHost;
    InetAddress *_hintIP;
    id <XMPPSocketDelegate> _delegate;
}

@property(nonatomic) __weak id <XMPPSocketDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) InetAddress *hintIP; // @synthesize hintIP=_hintIP;
@property(nonatomic) _Bool bindsToCellularNetwork; // @synthesize bindsToCellularNetwork=_bindsToCellularNetwork;
@property(readonly, nonatomic) unsigned short port; // @synthesize port=_port;
@property(readonly, copy, nonatomic) NSString *currentHost; // @synthesize currentHost=_currentHost;
@property(readonly, nonatomic) InetAddress *currentIP; // @synthesize currentIP=_currentIP;
- (void).cxx_destruct;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
@property(readonly, nonatomic, getter=isAlive) _Bool alive;
- (void)writeData:(id)arg1 withTimeout:(double)arg2;
- (void)readDataWithTimeout:(double)arg1;
@property(readonly, nonatomic, getter=isConnected) _Bool connected;
- (void)disconnectAfterWriting;
- (void)disconnectImmediately;
- (void)connect;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
- (void)connectToHost:(id)arg1;
- (id)initWithQueue:(id)arg1 timeout:(double)arg2;

@end

